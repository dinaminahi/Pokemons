{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/pockemon-details/pockemon-details.component.ts","webpack:///src/app/components/pockemon-details/pockemon-details.component.html","webpack:///src/app/pages/main/main.component.ts","webpack:///src/app/pages/main/main.component.html","webpack:///src/app/services/pockemon.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","PockemonDetailsComponent","pockemonService","subscription1","url","getPockemon","unsubscribe","add","getPockemonDetails","subscribe","pockemon","console","log","MainComponent","ifClicked","subscription2","subscription3","getPockemons","pockemons","results","nextPockemons","next","getTypes","forEach","res","types","pockemonClickedUrl","loadMoreData","PockemonService","http","get","providedIn","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {  MainComponent } from './pages/main/main.component';\n\nconst routes: Routes = [\n  {\n    path: '', component: MainComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Pokemon-Project';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatCardModule} from '@angular/material/card';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MainComponent } from './pages/main/main.component';\nimport { PockemonDetailsComponent } from './components/pockemon-details/pockemon-details.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainComponent,\n    PockemonDetailsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatCardModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatCardModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input, OnChanges, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { PockemonService } from 'src/app/services/pockemon.service';\nimport { Pockemon } from './pockemon.model';\n\n@Component({\n  selector: 'app-pockemon-details',\n  templateUrl: './pockemon-details.component.html',\n  styleUrls: ['./pockemon-details.component.scss'],\n})\nexport class PockemonDetailsComponent implements OnInit, OnChanges, OnDestroy {\n  @Input() url: string;\n\n  pockemon: Pockemon;\n\n  subscription1 = new Subscription();\n\n  constructor(private pockemonService: PockemonService) {}\n\n  ngOnInit(): void {}\n\n  ngOnChanges(): void {\n    if (this.url) {\n      this.getPockemon();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscription1.unsubscribe();\n  }\n\n  getPockemon(): void {\n    this.subscription1.add(this.pockemonService.getPockemonDetails(this.url).subscribe((pockemon) => {\n      this.pockemon = pockemon;\n      console.log(pockemon);\n    }));\n  }\n}\n","<mat-card class=\"card\">\n  <img *ngIf=\"pockemon\" mat-card-image src=\"https://pokeres.bastionbot.org/images/pokemon/{{pockemon?.id}}.png\"\n    alt=\"Photo of {{pockemon?.name}}\">\n  <mat-card-content class=\"card-content\">\n    <h2 class=\"name\">{{pockemon?.name}}</h2>\n    <div class=\"card-characteristic\">\n      <table>\n        <tbody>\n          <tr>\n            <td>Type</td>\n            <td><span class=\"type\" *ngFor=\"let type of pockemon?.types\">{{type?.type?.name}}</span></td>\n          </tr>\n          <tr *ngFor=\"let stat of pockemon?.stats\">\n            <td>{{stat?.stat?.name}}</td>\n            <td>{{stat?.base_stat}}</td>\n          </tr>\n          <tr>\n            <td>Weight</td>\n            <td>{{pockemon?.weight}}</td>\n          </tr>\n          <tr>\n            <td>Total moves</td>\n            <td>{{pockemon?.moves.length}}</td>\n          </tr>\n          <!--\n\n          <tr>\n            <td>Order</td>\n            <td>{{pockemon?.order}}</td>\n          </tr>\n          <tr>\n            <td></td>\n            <td></td>\n          </tr>\n          <tr>\n            <td></td>\n            <td></td>\n          </tr> -->\n        </tbody>\n      </table>\n    </div>\n  </mat-card-content>\n</mat-card>\n","import { Component, OnDestroy, OnInit} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { PockemonService } from 'src/app/services/pockemon.service';\nimport { Pockemon } from 'src/app/components/pockemon-details/pockemon.model';\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss'],\n})\nexport class MainComponent implements OnInit, OnDestroy {\n  nextPockemons: string;\n  pockemons: Pockemon[];\n  pockemonClickedUrl: string;\n  ifClicked = false;\n  subscription1 = new Subscription();\n  subscription2 = new Subscription();\n  subscription3 = new Subscription();\n\n  constructor(private pockemonService: PockemonService) {}\n\n  ngOnInit(): void {\n    this.getPockemons(`http://pokeapi.co/api/v2/pokemon/?limit=12`);\n  }\n\n  ngOnDestroy(): void {\n    this.subscription1.unsubscribe();\n    this.subscription2.unsubscribe();\n  }\n\n  getPockemons(url: string): void {\n    this.subscription1.add(this.pockemonService.getPockemons(url).subscribe((pockemons) => {\n      this.pockemons = pockemons.results;\n      this.nextPockemons = pockemons.next;\n      this.getTypes();\n    }));\n  }\n\n  getTypes(): void {\n    this.pockemons.forEach((pockemon: Pockemon) => {\n      this.subscription2.add(this.pockemonService.getPockemonDetails(pockemon.url).subscribe((res) => {\n        pockemon.types = res.types;\n        pockemon.id = res.id;\n\n      }));\n    });\n  }\n\n  clickPockemon(url: string): void {\n    this.pockemonClickedUrl = url;\n    this.ifClicked = true;\n  }\n\n  loadMoreData(): void {\n    this.getPockemons(this.nextPockemons);\n  }\n}\n","<div class=\"title-wrapper\">\n  <h1 class=\"title-wrapper-title\">Pokedex</h1>\n</div>\n\n<div class=\"page-wrapper\">\n  <div class=\"cards\">\n    <mat-card *ngFor=\"let pockemon of pockemons\" class=\"cards-pockemon\" (click)=\"clickPockemon(pockemon.url)\">\n      <img *ngIf=\"pockemon?.id\" mat-card-image src=\"https://pokeres.bastionbot.org/images/pokemon/{{pockemon?.id}}.png\"\n        alt=\"Photo of {{pockemon.name}}\">\n      <mat-card-content>\n        <h2 class=\"name\">{{pockemon.name}}</h2>\n        <div class=\"cards-pockemon-types\">\n          <span class=\"type\" *ngFor=\"let type of pockemon.types\">{{type.type.name}}</span>\n        </div>\n      </mat-card-content>\n    </mat-card>\n    <br>\n    <div class=\"btn-wrapper\">\n      <button (click)=\"loadMoreData()\">\n        Load More\n      </button>\n    </div>\n  </div>\n  <div class=\"details\" [style.visibility]=\"ifClicked ? 'visible' : 'hidden'\">\n    <app-pockemon-details [url]=\"pockemonClickedUrl\">\n    </app-pockemon-details>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Pockemon } from 'src/app/components/pockemon-details/pockemon.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PockemonService {\n  constructor(private http: HttpClient) {}\n\n  getPockemons(url: string): Observable<any> {\n    return this.http.get(url);\n  }\n\n  getPockemonDetails(url: string): Observable<any> {\n    return this.http.get(`${url}`);\n  }\n\n  getPockemonType(id: number): Observable<any> {\n    return this.http.get(`http://pokeapi.co/api/v2/type/${id}`);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}